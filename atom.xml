<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tony 字傳</title>
  
  <subtitle>紀錄 &amp; 分享一切</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.dexiang.me/"/>
  <updated>2018-02-02T11:02:07.460Z</updated>
  <id>http://blog.dexiang.me/</id>
  
  <author>
    <name>Tony Xu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTTP Caching</title>
    <link href="http://blog.dexiang.me/tech/HTTP%20Caching/"/>
    <id>http://blog.dexiang.me/tech/HTTP Caching/</id>
    <published>2018-02-01T07:02:39.000Z</published>
    <updated>2018-02-02T11:02:07.460Z</updated>
    
    <summary type="html">
    
      &lt;img src=&quot;/tech/HTTP%20Caching/Web-browsers-Chrome-Firefox-Safari-Edge-Opera_640x241.png&quot; alt=&quot;Browsers&quot; title=&quot;Browsers&quot;&gt;
&lt;p&gt;近年來 Web 的服務越來越多樣化，其中不乏較大流量的服務，不僅增加傳輸的成本，也會拖慢 Browser 處理的時間，因此需要重複的利用之前所緩存的資源。&lt;/p&gt;
&lt;h2 id=&quot;Caching-機制&quot;&gt;&lt;a href=&quot;#Caching-機制&quot; class=&quot;headerlink&quot; title=&quot;Caching 機制&quot;&gt;&lt;/a&gt;Caching 機制&lt;/h2&gt;&lt;p&gt;那就讓我們來看看 Caching 的機制是什麼&lt;/p&gt;
&lt;p&gt;在規範（&lt;a href=&quot;https://tools.ietf.org/html/rfc7234&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://tools.ietf.org/html/rfc7234&lt;/a&gt;）中將其分為 4.2. Freshness 和 4.3. Validation &lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="HTTP" scheme="http://blog.dexiang.me/tags/HTTP/"/>
    
      <category term="Cache" scheme="http://blog.dexiang.me/tags/Cache/"/>
    
      <category term="ETage" scheme="http://blog.dexiang.me/tags/ETage/"/>
    
  </entry>
  
  <entry>
    <title>Go 介紹</title>
    <link href="http://blog.dexiang.me/tech/go-introduction/"/>
    <id>http://blog.dexiang.me/tech/go-introduction/</id>
    <published>2018-01-29T02:08:52.000Z</published>
    <updated>2018-01-30T07:49:17.108Z</updated>
    
    <summary type="html">
    
      &lt;img src=&quot;/tech/go-introduction/go-logo.png&quot; alt=&quot;Golang&quot; title=&quot;Golang&quot;&gt;
&lt;p&gt;在一年多以前，開始在社群跟朋友間很常聽到 &lt;code&gt;Go&lt;/code&gt; 這個程式語言，也很好奇為什麼它突然聲名大噪，為什麼這麼多人推崇，在做了一些功課以後，近期有個機會可以將 &lt;code&gt;Go&lt;/code&gt; 用在實際的專案上，就來稍微的敘述一下心得好了。&lt;/p&gt;
&lt;h2 id=&quot;背景-amp-理念&quot;&gt;&lt;a href=&quot;#背景-amp-理念&quot; class=&quot;headerlink&quot; title=&quot;背景 &amp;amp; 理念&quot;&gt;&lt;/a&gt;背景 &amp;amp; 理念&lt;/h2&gt;&lt;p&gt;Google 開發的一種靜態強型別、編譯型、併發型，並具有垃圾回收功能的開源程式語言，於 2009 年面世，也稱作 Golang。由 Rob Pike &amp;amp; Robert Griesemer &amp;amp; Ken Thompson 共同開發，在短短不到十年的時間已在程式排名中有一席之地了，像是獲選 &lt;a href=&quot;https://www.tiobe.com/tiobe-index/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TIOBE&lt;/a&gt; 的 2016 最佳語言&lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="golang" scheme="http://blog.dexiang.me/tags/golang/"/>
    
      <category term="go" scheme="http://blog.dexiang.me/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>多媒體基本概念</title>
    <link href="http://blog.dexiang.me/tech/Media-basic-concept/"/>
    <id>http://blog.dexiang.me/tech/Media-basic-concept/</id>
    <published>2017-12-29T12:04:58.000Z</published>
    <updated>2018-01-09T04:03:26.551Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;接續著上次的簡介及流程介紹，這次就來聊聊常用到的選項（還偷渡了一點我會用到的 XDD）&lt;/p&gt;
&lt;p&gt;一開始我們先來確認 FFmpeg 的版本 ＆ 內含 Library，這關係到我們能用的功能，好比說我想轉 H.264 的 Codec，那麼我就要先確認我有沒有 &lt;code&gt;libx264&lt;/code&gt; 這個函式庫&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ ffmpeg -version&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="FFmpeg" scheme="http://blog.dexiang.me/tags/FFmpeg/"/>
    
      <category term="streaming" scheme="http://blog.dexiang.me/tags/streaming/"/>
    
  </entry>
  
  <entry>
    <title>FFmpeg H.264 編碼器</title>
    <link href="http://blog.dexiang.me/tech/FFmpeg-H264-Options/"/>
    <id>http://blog.dexiang.me/tech/FFmpeg-H264-Options/</id>
    <published>2017-12-23T15:44:58.000Z</published>
    <updated>2018-01-03T08:23:20.928Z</updated>
    
    <summary type="html">
    
      &lt;img src=&quot;/tech/FFmpeg-H264-Options/h264.png&quot; alt=&quot;H264&quot; title=&quot;H264&quot;&gt;
&lt;p&gt;H.264 / MPEG-4 AVC 是目前最被廣泛被應用的視訊編碼格式，它的壓縮效率比 MPEG-2、MPEG-4、RV40 …等舊視訊編碼格式還要高許多。&lt;/p&gt;
&lt;p&gt;如果要輸出 H.264 / AVC 視訊編碼，則需要 &lt;code&gt;libx264&lt;/code&gt; 編碼器，FFmpeg 的組態設定之中必須有 &lt;code&gt;--enable-libx264&lt;/code&gt; 則才可以使用。&lt;/p&gt;
&lt;p&gt;H.264 有多個版本，版本越高壓縮比就越高（對應到 profile）&lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="FFmpeg" scheme="http://blog.dexiang.me/tags/FFmpeg/"/>
    
      <category term="H264" scheme="http://blog.dexiang.me/tags/H264/"/>
    
  </entry>
  
  <entry>
    <title>FFmpeg 常用選項</title>
    <link href="http://blog.dexiang.me/tech/FFmpeg-Common-Options/"/>
    <id>http://blog.dexiang.me/tech/FFmpeg-Common-Options/</id>
    <published>2017-12-22T09:04:38.000Z</published>
    <updated>2018-01-08T10:10:01.990Z</updated>
    
    <summary type="html">
    
      &lt;img src=&quot;/tech/FFmpeg-Common-Options/transcoder.png&quot; alt=&quot;Transcoder&quot; title=&quot;Transcoder&quot;&gt;
&lt;p&gt;接續著上次的簡介及流程介紹，這次就來聊聊常用到的選項（還偷渡了一點我會用到的 XDD）&lt;/p&gt;
&lt;p&gt;一開始我們先來確認 FFmpeg 的版本 ＆ 內含 Library，這關係到我們能用的功能，好比說我想轉 H.264 的 Codec，那麼我就要先確認我有沒有 &lt;code&gt;libx264&lt;/code&gt; 這個函式庫&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ ffmpeg -version&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="FFmpeg" scheme="http://blog.dexiang.me/tags/FFmpeg/"/>
    
  </entry>
  
  <entry>
    <title>FFmpeg 多媒體框架</title>
    <link href="http://blog.dexiang.me/tech/FFmpeg-introduction/"/>
    <id>http://blog.dexiang.me/tech/FFmpeg-introduction/</id>
    <published>2017-12-20T09:04:38.000Z</published>
    <updated>2018-01-08T10:08:09.067Z</updated>
    
    <summary type="html">
    
      &lt;img src=&quot;/tech/FFmpeg-introduction/ffmpeg.png&quot; alt=&quot;FFmpeg&quot; title=&quot;FFmpeg&quot;&gt;
&lt;p&gt;FFmpeg 為開源的影音處理框架，可幫助我們進行影音的格式轉換、分離、混合、過濾等等，&lt;a href=&quot;http://ffmpeg.org/general.html#Supported-File-Formats_002c-Codecs-or-Features&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;支援格式&lt;/a&gt; 也非常的廣泛，也可以在多個作業系統及硬體架構上運作。同時也支援多種函式庫，更增加使用上的彈性，依照需求建立出最適合的工具。&lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="FFmpeg" scheme="http://blog.dexiang.me/tags/FFmpeg/"/>
    
  </entry>
  
  <entry>
    <title>OWASP Top 10 2017</title>
    <link href="http://blog.dexiang.me/tech/OWASP-2017/"/>
    <id>http://blog.dexiang.me/tech/OWASP-2017/</id>
    <published>2017-11-21T08:04:35.000Z</published>
    <updated>2017-11-29T01:30:13.117Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;這禮拜一去參加了 OWASP 2017 的研討會，其中提到了新發佈的 OWASP Top 10 2017版；先回頭來談一下什麼是 OWASP，在開發系統時，除了功能以外，安全也是必須要著重且注意的，在快速開發的過程中，常常會沒有兼顧到安全這塊；對於部分各戶來說，在還未出包之前大概也不會感覺到資安的重要；OWASP 就統整了十大弱點排名（當然啦～不是只有這十個需要重視）， 最近的一次正式更新是在 2013 年，在這過程中資訊的進步很快，排名也略有變動。&lt;/p&gt;
&lt;img src=&quot;/tech/OWASP-2017/OWASP_Top_10_2013_with_2017_800x446.png&quot; alt=&quot;OWASP Top 10&quot; title=&quot;OWASP Top 10&quot;&gt;
&lt;p&gt;在研討會中也提到了最新的 OWASP Top 10 2017，與 2013 年比較第一名依舊是 Injection，第二名是身份驗證；然而新版的因考慮了現在的系統採用了許多的 API 讓前後端分離，也搜集了實際企業的 Log 數據，可以從排名中看出都跟最近流行的微服務有關。&lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="OWASP" scheme="http://blog.dexiang.me/tags/OWASP/"/>
    
  </entry>
  
  <entry>
    <title>GPS 資料格式</title>
    <link href="http://blog.dexiang.me/tech/GPS-NMEA/"/>
    <id>http://blog.dexiang.me/tech/GPS-NMEA/</id>
    <published>2017-11-02T02:07:32.000Z</published>
    <updated>2017-11-08T01:47:27.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;什麼是 NMEA file ？&lt;br&gt;美國國家海洋電子協會 (National Marine Electronics Association，NMEA) 制定了 GPS 協定標準規格，NMEA 0183 的資料格式中記錄了座標、方位、速度、衛星有效數量等等的資訊。&lt;/p&gt;
&lt;img src=&quot;/tech/GPS-NMEA/GPS_600.jpg&quot; alt=&quot;GPS&quot; title=&quot;GPS&quot;&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="GPS" scheme="http://blog.dexiang.me/tags/GPS/"/>
    
      <category term="NMEA" scheme="http://blog.dexiang.me/tags/NMEA/"/>
    
  </entry>
  
  <entry>
    <title>淺談 SEO</title>
    <link href="http://blog.dexiang.me/tech/SEO-basic/"/>
    <id>http://blog.dexiang.me/tech/SEO-basic/</id>
    <published>2017-10-20T08:04:35.000Z</published>
    <updated>2017-10-24T11:30:36.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;SEO 是什麼呢？它的全稱是 Search Engine Optimization（搜尋引擎優化）。&lt;/p&gt;
&lt;img src=&quot;/tech/SEO-basic/seo-860x484.png&quot; alt=&quot;SEO&quot; title=&quot;SEO&quot;&gt;
&lt;p&gt;要如何優化呢？其實就是想辦法讓各家的搜尋引擎看懂你的網站；當然內容正確是基本的，搜尋引擎就像一個圖書館一樣，當書目很大量時就得依靠索引、關鍵字等等的輔助去找到書籍，依照大綱、標題等等的去找到正確的內容。再來就是要針對各家的演算法去做強化，但不建議過度針對演算法優化，把內容做好＆標籤打對才是基本功。&lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="SEO" scheme="http://blog.dexiang.me/tags/SEO/"/>
    
  </entry>
  
  <entry>
    <title>CloudFlare 代管 GoDaddy DNS</title>
    <link href="http://blog.dexiang.me/tech/godaddy-to-cloudflare/"/>
    <id>http://blog.dexiang.me/tech/godaddy-to-cloudflare/</id>
    <published>2017-08-20T07:04:30.000Z</published>
    <updated>2017-10-17T10:32:37.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;前一陣子把 GoDaddy 所購買的 Domain 搬到 CloudFlare 代管，主要是看上免費的 CDN 和 SSL，設定上也很方便&lt;/p&gt;
&lt;h2 id=&quot;新增站台&quot;&gt;&lt;a href=&quot;#新增站台&quot; class=&quot;headerlink&quot; title=&quot;新增站台&quot;&gt;&lt;/a&gt;新增站台&lt;/h2&gt;&lt;p&gt;註冊後，點選畫面的右上角「Add Site」來新增站台吧&lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="CDN" scheme="http://blog.dexiang.me/tags/CDN/"/>
    
      <category term="SSL" scheme="http://blog.dexiang.me/tags/SSL/"/>
    
      <category term="GoDaddy" scheme="http://blog.dexiang.me/tags/GoDaddy/"/>
    
      <category term="CloudFlare" scheme="http://blog.dexiang.me/tags/CloudFlare/"/>
    
  </entry>
  
  <entry>
    <title>重新安裝 macOS</title>
    <link href="http://blog.dexiang.me/tech/reinstall-macOS/"/>
    <id>http://blog.dexiang.me/tech/reinstall-macOS/</id>
    <published>2017-08-15T07:04:30.000Z</published>
    <updated>2017-10-17T08:19:16.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近換了新的工作，因舊的 mac 已不敷使用，只好將它脫手買一台最新最潮的 MacBook Pro 了 (不知道是該難過還是高興…)&lt;/p&gt;
&lt;p&gt;回到正題，其實 Mac 不太需要重灌，舊的 MacBook Air 也用了好幾年，這中間也都沒有重灌過，不過若是像我一樣是想要賣人，那當然要清乾淨了 ( &lt;del&gt;免得不小心流出什麼&lt;/del&gt; )&lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="mac" scheme="http://blog.dexiang.me/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7 上安裝與設定 Nginx + PHP7</title>
    <link href="http://blog.dexiang.me/tech/GCP/nginx-with-php7/"/>
    <id>http://blog.dexiang.me/tech/GCP/nginx-with-php7/</id>
    <published>2017-06-22T11:18:20.000Z</published>
    <updated>2017-08-22T08:18:20.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;之前在工作上幾乎都是採用 Apache，前一陣子常聽到同事說 Nginx，但我卻沒有實際用過，趁這這次試用 GCP，也來試試看 Nginx&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：以下的環境是在 GCE (Google Compute Engine) + CentOS7 上完成。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;安裝-Nginx&quot;&gt;&lt;a href=&quot;#安裝-Nginx&quot; class=&quot;headerlink&quot; title=&quot;安裝 Nginx&quot;&gt;&lt;/a&gt;安裝 Nginx&lt;/h2&gt;&lt;p&gt;要在 yum 中增加 Nginx，需手動加入 repo 設定，這樣就可以透過 yum 安裝了&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# 讓 yum 能找到 nginx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ vim /etc/yum.repos.d/nginx.repo&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
      <category term="GCP" scheme="http://blog.dexiang.me/categories/tech/GCP/"/>
    
    
      <category term="MacOSX" scheme="http://blog.dexiang.me/tags/MacOSX/"/>
    
      <category term="git" scheme="http://blog.dexiang.me/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>開始動手做吧～ 在 GCP 上建立自己的虛擬主機</title>
    <link href="http://blog.dexiang.me/tech/start-gcp-and-gce/"/>
    <id>http://blog.dexiang.me/tech/start-gcp-and-gce/</id>
    <published>2017-06-19T08:04:30.000Z</published>
    <updated>2017-10-15T12:44:10.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近申請了 GCP 上的帳號，首年免費試用，且送 300 美金，立馬開一台來玩玩啊。上面也有免費的機器可以使用，在盤算著是否可以把 AWS 上一些小的測試服務搬過來。&lt;/p&gt;
&lt;h2 id=&quot;GCP-試用服務&quot;&gt;&lt;a href=&quot;#GCP-試用服務&quot; class=&quot;headerlink&quot; title=&quot;GCP 試用服務&quot;&gt;&lt;/a&gt;GCP 試用服務&lt;/h2&gt;&lt;p&gt;第一年免費獲得 $300 美元的試用額度，當 12 個月後或用完 $300 美元試用額度後結束試用，若是沒有用完，這筆金額將在 12 個月後作廢。Google Cloud Platform 主控台頂端會顯示剩餘的試用額度和天數。&lt;/p&gt;
&lt;h2 id=&quot;GCP-永久免費服務&quot;&gt;&lt;a href=&quot;#GCP-永久免費服務&quot; class=&quot;headerlink&quot; title=&quot;GCP 永久免費服務&quot;&gt;&lt;/a&gt;GCP 永久免費服務&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Google Compute Engine&lt;ul&gt;
&lt;li&gt;每個月 1 台 f1-micro VM (限定 US regions，除 Northern Virginia：us-central1、us-west1、us-east1)&lt;/li&gt;
&lt;li&gt;每個月 30 GB 硬碟 &amp;amp; 5 GB 快照&lt;/li&gt;
&lt;li&gt;每個月 1 GB 的網路出口流量 (除了中國和澳洲)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="GCP" scheme="http://blog.dexiang.me/tags/GCP/"/>
    
      <category term="GCE" scheme="http://blog.dexiang.me/tags/GCE/"/>
    
  </entry>
  
  <entry>
    <title>刪除 .DS_Store 隱藏檔</title>
    <link href="http://blog.dexiang.me/tech/remove-ds-store/"/>
    <id>http://blog.dexiang.me/tech/remove-ds-store/</id>
    <published>2017-06-17T08:50:20.000Z</published>
    <updated>2017-10-15T12:44:05.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;最近新買了一台 NAS，在連線的時候常常會發現多了 .DS_Store 這個隱藏檔，平常在 Mac 上倒是無所謂，但是出現在 NAS 裡就覺得煩人了&lt;/p&gt;
&lt;h2 id=&quot;DS-Store&quot;&gt;&lt;a href=&quot;#DS-Store&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="MacOSX" scheme="http://blog.dexiang.me/tags/MacOSX/"/>
    
      <category term="git" scheme="http://blog.dexiang.me/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>雲端 PK - AWS &amp; GCP</title>
    <link href="http://blog.dexiang.me/tech/gcp-vs-aws/"/>
    <id>http://blog.dexiang.me/tech/gcp-vs-aws/</id>
    <published>2017-06-06T11:18:13.000Z</published>
    <updated>2017-10-15T12:43:13.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;近年來雲端平台的服務應該大家都不陌生吧～它讓我們可以將維護與建置的工作交付給雲端平台去處理；雲端化以後 IT 維護改由雲端供應商負責，讓我們能花更多的專注力在創新研發上，還能加速部署與模型的建置，使得產品業務更靈活。&lt;/p&gt;
&lt;p&gt;那麼，到底該怎麼挑選適合自己公司的雲端？先來基礎複習一下，主要的三種雲端服務類型 IaaS（Infrastructure as a Service，基礎設施即服務）、PasS（Platform as a Service，平台即服務）、SaaS（Software as a Service，軟體即服務），各家平台在服務上也略有不同：&lt;/p&gt;
&lt;img src=&quot;/tech/gcp-vs-aws/separation_of_responsibilities.png&quot; alt=&quot;Separation of Responsibilities&quot; title=&quot;Separation of Responsibilities&quot;&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="AWS" scheme="http://blog.dexiang.me/tags/AWS/"/>
    
      <category term="GCP" scheme="http://blog.dexiang.me/tags/GCP/"/>
    
  </entry>
  
  <entry>
    <title>簡介 HTTP &amp; HTTPS &amp; HTTP2 協定</title>
    <link href="http://blog.dexiang.me/tech/about-hyper-text-transfer-protocol/"/>
    <id>http://blog.dexiang.me/tech/about-hyper-text-transfer-protocol/</id>
    <published>2017-03-03T10:03:43.000Z</published>
    <updated>2017-10-15T12:41:57.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;科技來自於人性，知識的傳遞原本是透過書本或口述，但是當網路出現後，人們想要在上傳遞資訊，就得要制定出一些規則，經過不斷修改，最後總結成了一個協定，把它命名為 HyperText Transfer Protocol。&lt;/p&gt;
&lt;h2 id=&quot;HTTP&quot;&gt;&lt;a href=&quot;#HTTP&quot; class=&quot;headerlink&quot; title=&quot;HTTP&quot;&gt;&lt;/a&gt;HTTP&lt;/h2&gt;&lt;p&gt;一種網路傳輸協定，全名是：HyperText Transfer Protocol，設計初衷是為了傳輸 HTML，中間也推出了數個版本，現今最被廣泛使用的是 HTTP1.1。&lt;/p&gt;
&lt;h3 id=&quot;HTTP-進程&quot;&gt;&lt;a href=&quot;#HTTP-進程&quot; class=&quot;headerlink&quot; title=&quot;HTTP 進程&quot;&gt;&lt;/a&gt;HTTP 進程&lt;/h3&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;HTTP/0.9：已過時。只接受GET一種請求方法，沒有在通訊中指定版本號，且不支援請求頭。由於該版本不支援POST方法，因此用戶端無法向伺服器傳遞太多資訊。&lt;/li&gt;
&lt;li&gt;HTTP/1.0：這是第一個在通訊中指定版本號的HTTP協定版本，至今仍被廣泛採用，特別是在代理伺服器中。&lt;/li&gt;
&lt;li&gt;HTTP/1.1：持久連線被預設採用，並能很好地配合代理伺服器工作。還支援以管道方式在同時傳送多個請求，以便降低線路負載，提高傳輸速度。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;※ 引述自 &lt;a href=&quot;https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;維基百科&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="http" scheme="http://blog.dexiang.me/tags/http/"/>
    
      <category term="https" scheme="http://blog.dexiang.me/tags/https/"/>
    
      <category term="http2" scheme="http://blog.dexiang.me/tags/http2/"/>
    
      <category term="TCP" scheme="http://blog.dexiang.me/tags/TCP/"/>
    
      <category term="ssl" scheme="http://blog.dexiang.me/tags/ssl/"/>
    
      <category term="tls" scheme="http://blog.dexiang.me/tags/tls/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 草稿</title>
    <link href="http://blog.dexiang.me/tech/hexo-draft/"/>
    <id>http://blog.dexiang.me/tech/hexo-draft/</id>
    <published>2017-02-02T11:08:43.000Z</published>
    <updated>2017-10-15T12:43:26.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在寫部落格的時候常常會因為篇幅過大沒辦法一次編寫完成，或是同時編寫多篇文章，這時候就會希望不要把這些文章發佈出去。&lt;/p&gt;
&lt;h3 id=&quot;建立草稿&quot;&gt;&lt;a href=&quot;#建立草稿&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="hexo" scheme="http://blog.dexiang.me/tags/hexo/"/>
    
      <category term="draft" scheme="http://blog.dexiang.me/tags/draft/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 指南</title>
    <link href="http://blog.dexiang.me/tech/hexo-guide/"/>
    <id>http://blog.dexiang.me/tech/hexo-guide/</id>
    <published>2017-01-20T07:08:26.000Z</published>
    <updated>2017-10-15T12:43:34.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;其實目前官網的文件非常詳細，這裡就不多做介紹了。&lt;/p&gt;
&lt;h2 id=&quot;安裝-Hexo&quot;&gt;&lt;a href=&quot;#安裝-Hexo&quot; class=&quot;headerlink&quot; title=&quot;安裝 Hexo&quot;&gt;&lt;/a&gt;安裝 Hexo&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ npm install hexo-cli -g&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;建立-amp-初始化&quot;&gt;&lt;a href=&quot;#建立-amp-初始化&quot; class=&quot;headerlink&quot; title=&quot;建立 &amp;amp; 初始化&quot;&gt;&lt;/a&gt;建立 &amp;amp; 初始化&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo init &amp;lt;folder&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ cd &amp;lt;folder&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ npm install&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;建立後會有以下資料夾 &amp;amp; 檔案&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── _config.yml # 網站設定檔&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── package.json&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── scaffolds # 鷹架資料夾&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── scripts # 腳本資料夾&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── source&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   ├── _drafts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   └── _posts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;└── themes # 主題&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="hexo" scheme="http://blog.dexiang.me/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 簡介</title>
    <link href="http://blog.dexiang.me/tech/hexo-introduction/"/>
    <id>http://blog.dexiang.me/tech/hexo-introduction/</id>
    <published>2017-01-18T11:08:43.000Z</published>
    <updated>2017-10-15T12:43:42.000Z</updated>
    
    <summary type="html">
    
      &lt;img src=&quot;/tech/hexo-introduction/hexo-github3.png&quot; alt=&quot;Hexo + Github&quot; title=&quot;Hexo + Github&quot;&gt;
&lt;p&gt;幾年前因為想寫一些文章而用 wordpress 架設了一網站，但覺得要管理維護太麻煩，後來就改到 Blogger，雖然它的功能很方便，與 google 的產品結合 (GA)，且有 SEO 的優勢，但一方面是想要有更高的控制權，另一方面是想換一個工具試試看。&lt;/p&gt;
&lt;h2 id=&quot;什麼是-Hexo&quot;&gt;&lt;a href=&quot;#什麼是-Hexo&quot; class=&quot;headerlink&quot; title=&quot;什麼是 Hexo&quot;&gt;&lt;/a&gt;什麼是 Hexo&lt;/h2&gt;&lt;p&gt;Hexo 是一個基於 &lt;code&gt;Node.js&lt;/code&gt; 的部落格框架，可透過 Hexo 快速產生一個部落格，只需要幾行指令就可以搞定。安裝環境也是。支援 MarkDown 語法且兼容&lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
      <category term="hexo" scheme="http://blog.dexiang.me/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>雲端主機</title>
    <link href="http://blog.dexiang.me/tech/Cloud-Server/"/>
    <id>http://blog.dexiang.me/tech/Cloud-Server/</id>
    <published>2016-12-09T16:33:06.000Z</published>
    <updated>2017-10-15T12:36:44.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;之前有一大段時間都把服務放在 AWS 的 EC2 上，但最近在整理環境的時候開始思考，以我的需求有需要把服務放在 EC2 上嗎？ 就開始研究相關的服務，查了一些文章及同事的推薦，就想說把這些訊息分享出來。&lt;/p&gt;
&lt;h2 id=&quot;虛擬主機&quot;&gt;&lt;a href=&quot;#虛擬主機&quot; class=&quot;headerlink&quot; title=&quot;虛擬主機&quot;&gt;&lt;/a&gt;虛擬主機&lt;/h2&gt;&lt;p&gt;若是有玩過虛擬機的人，例如 VMware、VirtualBox 這些東西，其實原理是一樣的。虛擬主機就像大通舖一樣，一群人要一起共用設施，床位也可能因為旁人的影響而限縮，但優點就是便宜。&lt;/p&gt;
&lt;h2 id=&quot;VPS&quot;&gt;&lt;a href=&quot;#VPS&quot; class=&quot;headerlink&quot; title=&quot;VPS&quot;&gt;&lt;/a&gt;VPS&lt;/h2&gt;&lt;p&gt;VPS 是 Virtual Private Server 的縮寫，就是在一台機器上以軟體的方式模擬成多台機器，讓這些機器能分享CPU、記憶體、硬碟…等硬體資源，並各自運作不同的程式，不互相干擾。VPS 就像套房一樣，有獨立的衛浴及設施，相對的價格比較高。&lt;/p&gt;
&lt;p&gt;目前 VPS 的技術比較常見的兩種，分別為 Xen 跟 OpenVZ，兩者使用的虛擬技術不太一樣，OpenVZ 的每一台虛擬機的資源由 OpenVZ 動態控制著，共用著所有的 kernel，實體上來說，每一部虛擬機器並不是真的擁有自己的資源 ( CPU、記憶體…)；而 Xen 則是以模擬硬體的方式，讓每部虛擬機器擁有自己的各種硬體環境，所以，每部虛擬機器是完全獨立的，一旦分到多少的資源，就是多少，不像 OpenVZ 那樣可以動態的調整，因此，採用 XEN 的電腦所能夠分割出來的虛擬機器數量，因為被固定住資源，所以，可能會比較 OpenVZ 來的少。&lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://blog.dexiang.me/categories/tech/"/>
    
    
  </entry>
  
</feed>
